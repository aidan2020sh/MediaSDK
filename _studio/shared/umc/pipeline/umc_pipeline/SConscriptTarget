####################################################################################
#
# INTEL CORPORATION PROPRIETARY INFORMATION
# This software is supplied under the terms of a license agreement or nondisclosure
# agreement with Intel Corporation and may not be copied or disclosed except in
# accordance with the terms of that agreement
# Copyright(c) 2010-2012 Intel Corporation. All Rights Reserved.
#
####################################################################################

# Importing MFX utilities module
import mfx_utils

# Importing variables
Import('mfx_lib_env')

# Creating build environment
bld_env = mfx_lib_env.Clone()
bld_env['MFX_CURDIR'] = '#_studio/shared/umc/pipeline/umc_pipeline'

# Setting list of additional include directories
includes = ['#_studio/shared/umc/codec/color_space_converter/include',
            '#_studio/shared/umc/io/audio_renders/include',
            '#_studio/shared/umc/io/video_renders/include',
            '#_studio/shared/umc/codec/avi_spl/include',
            '#_studio/shared/umc/codec/spl_common/include',
            '#_studio/shared/umc/codec/mpeg4_spl/include',
            '#_studio/shared/umc/codec/vc1_common/include',
            '#_studio/shared/umc/codec/vc1_spl/include',
            '#_studio/shared/umc/codec/vc1_dec/include',
            '#_studio/shared/umc/codec/mpeg2_dec/include',
            '#_studio/shared/umc/codec/h264_dec/include',
            '#_studio/shared/umc/codec/demuxer/include',
            '#_studio/shared/umc/codec/jpeg/include',
            '#_studio/shared/umc/codec/jpeg_dec/include'
           ]
bld_env.Append(CPPPATH = includes)

# Setting lists of sources
local = mfx_utils.get_filenames(Glob('src/*.cpp'))

# Preparing sources for compilation
sources = mfx_utils.prepare_sources(bld_env, local)

# Compiling sources
objs = mfx_utils.build_sources(bld_env, sources)

# Building library
bld_env.StaticLibrary(target = mfx_utils.get_build_name(bld_env, 'umc_pipeline'), source = objs)

# Returning list of object files to build merged library
Return('objs')
