####################################################################################
#
# INTEL CORPORATION PROPRIETARY INFORMATION
# This software is supplied under the terms of a license agreement or nondisclosure
# agreement with Intel Corporation and may not be copied or disclosed except in
# accordance with the terms of that agreement
# Copyright(c) 2010-2011 Intel Corporation. All Rights Reserved.
#
####################################################################################

# Importing MFX utilities module
import mfx_utils
import os

# Importing variables
Import('mfx_lib_env')

# Creating build environment
bld_env = mfx_lib_env.Clone()
bld_env['MFX_CURDIR'] = '#_studio/shared/umc/io/video_renders'

if bld_env['MFX_IMPL'] == 'hw':
  bld_env.Append(CPPDEFINES='MFX_VA')

# Setting list of additional include directories
includes = ['#_studio/shared/umc/codec/color_space_converter/include'
           ]
bld_env.Append(CPPPATH = includes)

# Packages to compile and link with
if bld_env['MFX_PLATFORM'] == 'lin':
  packages = ['sdl']
  mfx_utils.check_and_set_packages(bld_env, packages)
  
# Setting lists of sources
local = mfx_utils.get_filenames(Glob('src/*.cpp')) + mfx_utils.get_filenames(Glob('src/*.c'))

# Preparing sources for compilation
sources = mfx_utils.prepare_sources(bld_env, local)

# Compiling library
objs = mfx_utils.build_sources(bld_env, sources)

# Building library
bld_env.StaticLibrary(target = mfx_utils.get_build_name(bld_env, 'video_renders'), source = objs)

# Returning list of object files to build merged library
Return('objs')
