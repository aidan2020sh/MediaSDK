---
resource: DOCKER_LINUX_DRIVER
manifest: manifest.yml
working_dir: '..'
env:
  DOCKER_ENV_VARS: "-e SYSTEM=Ubuntu18.04 -e LINUX_DISTRO=ubuntu -e CCACHE_DIR=/opt/ccache \
    -e MEDIASDK_ROOT=/opt/src/msdk_root -e MFX_HOME=/opt/src/sources/mdp_msdk-lib \
    -e MFX_MDF_PATH=/opt/src/msdk_root/cmrt_linux \
    -e PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig:/usr/local/lib/pkgconfig \
    -e CMAKE_VTUNE_HOME=/opt/src/sources/mdp_msdk-contrib/itt"
  DOCKER_IMAGE: dockerv2-gfx-build.gfx-assets.intel.com/common/mediasdk-ubuntu18.04:1
qb_variable_map:
  build_version: BUILD_VERSION
  component_name: COMPONENT_NAME
  irepo_workspace: WORKSPACE
  parent_build_id: BUILD_ID
  build_number: BUILD_NUMBER
steps:
  - name: clean mediasdk lib repo
    command: rm -rf $WORKSPACE/sources/mdp_msdk-lib
  - name: copy lib repo (mediasdk or product)
    command: if [ -d $WORKSPACE/mediasdk ]; then cp -R $WORKSPACE/mediasdk $WORKSPACE/sources/mdp_msdk-lib;
      elif [ -d $WORKSPACE/product ]; then cp -R $WORKSPACE/product $WORKSPACE/sources/mdp_msdk-lib; else exit 1; fi
  - name: create container
    command: docker run --name $BUILD_ID --rm -d -w /opt/src $DOCKER_ENV_VARS -e BUILD_NUMBER=$BUILD_NUMBER --init -v $WORKSPACE:/opt/src
      -v /ccache:/opt/ccache -e LOCAL_USER_ID=`id -u` -e LOCAL_GROUP_ID=`id -g` $DOCKER_IMAGE
      /bin/bash -c "sleep 1800"
  - name: config_libva
    command: docker exec $BUILD_ID /bin/bash -c "cd libva && ./autogen.sh --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu"
  - name: build_libva
    command: docker exec $BUILD_ID /bin/bash -c "cd libva && sudo make install"
  - name: config mediasdk
    command: docker exec $BUILD_ID /bin/bash -c 'mkdir -p sources/mdp_msdk-lib/build/mediasdk &&
      cd sources/mdp_msdk-lib/build/mediasdk && /opt/tools/cmake-latest/bin/cmake
      -DCMAKE_INSTALL_PREFIX=/opt/intel/mediasdk
      -DCMAKE_C_FLAGS_RELEASE="-Wall -O2 -D_FORTIFY_SOURCE=2 -fstack-protector-strong -DNDEBUG"
      -DCMAKE_CXX_FLAGS_RELEASE="-Wall -O2 -D_FORTIFY_SOURCE=2 -fstack-protector-strong -DNDEBUG"
      -DENABLE_X11_DRI3=ON -DENABLE_WAYLAND=ON -DENABLE_TEXTLOG=ON -DENABLE_STAT=ON -DBUILD_ALL=ON
      -DBUILD_VAL_TOOLS=ON -DAPI=latest -DENABLE_ITT=OFF -DENABLE_OPENCL=OFF $MFX_HOME'
  - name: build mediasdk
    command: docker exec $BUILD_ID /bin/bash -c "cd sources/mdp_msdk-lib/build/mediasdk && make -j$(nproc)"
  - name: config vpl
    command: docker exec $BUILD_ID /bin/bash -c 'mkdir -p sources/mdp_msdk-lib/build/vpl &&
      cd sources/mdp_msdk-lib/build/vpl && /opt/tools/cmake-latest/bin/cmake
      -DCMAKE_INSTALL_PREFIX=/opt/intel/mediasdk
      -DCMAKE_C_FLAGS_RELEASE="-Wall -O2 -D_FORTIFY_SOURCE=2 -fstack-protector-strong -DNDEBUG"
      -DCMAKE_CXX_FLAGS_RELEASE="-Wall -O2 -D_FORTIFY_SOURCE=2 -fstack-protector-strong -DNDEBUG"
      -DENABLE_X11_DRI3=ON -DENABLE_WAYLAND=ON -DENABLE_TEXTLOG=ON -DENABLE_STAT=ON -DBUILD_ALL=ON
      -DENABLE_OPENCL=OFF -DMFX_DISABLE_SW_FALLBACK=OFF -DAPI=2.1 $MFX_HOME'
  - name: build vpl
    command: docker exec $BUILD_ID /bin/bash -c "cd sources/mdp_msdk-lib/build/vpl && make -j$(nproc) mfx-gen"
  - name: create deb package
    command: docker exec $BUILD_ID /bin/bash -c "/opt/src/sources/mdp_msdk-lib/config/scripts/pack_linux_lib.sh
      -b /opt/src/sources/mdp_msdk-lib/build
      -h /opt/src/sources/mdp_msdk-lib/api
      -p /opt/src/sources/mdp_msdk-lib/build/output
      -n $BUILD_NUMBER"
  - name: create lib drop
    command: docker exec $BUILD_ID /bin/bash -c "/opt/src/sources/mdp_msdk-lib/config/scripts/drop_linux_lib.sh
      -b /opt/src/sources/mdp_msdk-lib/build
      -h /opt/src/sources/mdp_msdk-lib/api
      -p /opt/src/sources/mdp_msdk-lib/build/output
      -n $BUILD_NUMBER"
  - name: build mediasdk tools
    command: docker exec $BUILD_ID /bin/bash -c "cd sources/mdp_msdk-lib/build/mediasdk &&
      /opt/src/sources/mdp_msdk-lib/config/scripts/build_linux_tools.sh"
  - name: create tools drop package
    command: docker exec $BUILD_ID /bin/bash -c "/opt/src/sources/mdp_msdk-lib/config/scripts/drop_linux_tools.sh
      -v /opt/src/msdk_binaries/linux_validation_tools
      -b /opt/src/sources/mdp_msdk-lib/build/mediasdk/__bin/release
      -l /opt/src/sources/mdp_msdk-lib/build/mediasdk/__lib/release
      -t /opt/src/msdk_binaries/test_behavior
      -p /opt/src/sources/mdp_msdk-lib/build/output
      -n $BUILD_NUMBER"
  - name: create tools deb package
    command: docker exec $BUILD_ID /bin/bash -c "/opt/src/sources/mdp_msdk-lib/config/scripts/pack_linux_tools.sh
      -b /opt/src/sources/mdp_msdk-lib/build/mediasdk/__bin/release
      -t /opt/src/msdk_binaries/test_behavior
      -h /opt/src/hevce_tests
      -p /opt/src/sources/mdp_msdk-lib/build/output
      -n $BUILD_NUMBER"
  - name: create lucas drop package
    command: docker exec $BUILD_ID /bin/bash -c "/opt/src/sources/mdp_msdk-lib/config/scripts/drop_linux_lucas.sh
      -v /opt/src/msdk_binaries/linux_validation_tools
      -b /opt/src/sources/mdp_msdk-lib/build/mediasdk/__bin/release
      -l /opt/src/sources/mdp_msdk-lib/build/mediasdk/__lib/release
      -o /opt/src/sources/mdp_msdk-lib/build/vpl/__bin/release
      -p /opt/src/sources/mdp_msdk-lib/build/output
      -n $BUILD_NUMBER"
  - name: remove container
    command: docker kill $BUILD_ID
  - name: mock command on host
    command: docker ps -a
types:
  ubuntu18.04:
    env:
      BUILD_TYPE: Release
    output:
    - file_patterns: "*.deb,*.tgz"
      source_dir: "../sources/mdp_msdk-lib/build/output"
      destination_dir: Linux/Ubuntu/18.04