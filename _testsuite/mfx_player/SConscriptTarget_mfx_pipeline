####################################################################################
#
# INTEL CORPORATION PROPRIETARY INFORMATION
# This software is supplied under the terms of a license agreement or nondisclosure
# agreement with Intel Corporation and may not be copied or disclosed except in
# accordance with the terms of that agreement
# Copyright(c) 2010-2012 Intel Corporation. All Rights Reserved.
#
####################################################################################

# Importing MFX utilities module
import os
import mfx_utils

# Importing variables
Import('mfx_tst_lib_env')
Import('lucas_impl')

# Creating build environment
bld_env = mfx_tst_lib_env.Clone()
bld_env['MFX_CURDIR'] = '#_testsuite/mfx_player'

if lucas_impl == 'true':
  bld_env.Append(CPPDEFINES='LUCAS_DLL')
  bld_env['MFX_OBJS_DIR'] = 'objs_lucas'
  ending = '_lucas'
else:
  ending = ''


# Setting list of additional include directories
includes = ['#_studio/mfx_dispatch/include',
            '#_studio/shared/umc/codec/spl_common/include',
            '#_studio/shared/umc/codec/avi_spl/include',
            '#_studio/shared/umc/codec/demuxer/include',
            '#_studio/shared/umc/test_suite/spy_test_component/include',
            '#_testsuite/shared/include',
            '#samples/sample_common/include']
#            '#samples/sample_utilities/vpp_plugin/include']
bld_env.Append(CPPPATH = includes)

# Setting lists of sources
local = mfx_utils.get_filenames(Glob('src/*.cpp'))
local.remove('mfx_player.cpp')

# Preparing sources for compilation
sources = mfx_utils.prepare_sources(bld_env, local)

# Optional packages to compile and link with
if bld_env['MFX_PLATFORM'] == 'lin':
  packages = ['x11', 'libva-x11']
  mfx_utils.check_and_set_packages(bld_env, packages)
  
vtune_path = os.getenv("MFX_VTUNE_PATH")
if None != vtune_path:
  mfx_utils.set_itt_env(bld_env, vtune_path)

# Building library
bld_env.StaticLibrary(target = mfx_utils.get_build_name(bld_env, 'mfx_pipeline' + ending), source = sources)


