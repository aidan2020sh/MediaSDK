####################################################################################
#
# INTEL CORPORATION PROPRIETARY INFORMATION
# This software is supplied under the terms of a license agreement or nondisclosure
# agreement with Intel Corporation and may not be copied or disclosed except in
# accordance with the terms of that agreement
# Copyright(c) 2010-2012 Intel Corporation. All Rights Reserved.
#
####################################################################################

# Importing MFX utilities module
import mfx_utils

# Importing variables
Import('mfx_lib_env')

# Creating build environment
bld_env = mfx_lib_env.Clone()
bld_env['MFX_CURDIR'] = '#_studio/mfx_dispatch'
bld_env.Append(CPPDEFINES = 'MFX_DISPATCHER')

# Setting lists of sources
local = ['main.cpp',
         'mfx_critical_section.cpp',
         'mfx_dispatcher.cpp',
         'mfx_dispatcher_log.cpp',
         'mfx_function_table.cpp',
         'mfx_library_iterator.cpp',
         'mfx_load_dll.cpp',
         'mfx_win_reg_key.cpp']
shared = ['mfx_dxva2_device.cpp',
         'mfx_search_dll.cpp']

# Setting directories to place object files
VariantDir('objs_shared', '#_studio/shared/src', duplicate = 0)

# Preparing sources for compilation
sources = mfx_utils.prepare_sources(bld_env, local) + \
          mfx_utils.attach_prefix('objs_shared', shared)

# Compiling library
library = bld_env.StaticLibrary(target = mfx_utils.get_build_name(bld_env, 'mfx'), source = sources)

# Installing library
bld_env['MFX_INSTALL_BIN_DIR'] = '#' + mfx_utils.get_dispatcher_path(bld_env)
mfx_utils.install_if_exists(bld_env, library)
#bld_env.Alias('install', bld_env.Install('#' + mfx_utils.get_dispatcher_path(bld_env), library))
